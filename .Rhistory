getwt()
getwd()
getwd()
getwd
getwd()
setwd("~/Desktop/Coursera/RepData_PeerAssesment1")
setwd("~/Desktop")
setwd("~/Desktop/Coursera/RepData_PeerAssessment1")
setwd("~/Desktop/Coursera/RepData_PeerAssesment1")
setwd("~/Desktop/Coursera/RepData_PeerAssesment1")
setwd("~/Desktop/Coursera/RepData_PeerAssesment1")
setwd("~/Desktop/Coursera/RepData_PeerAssesment1")
unzip("activity.zip")
activity <- read.csv("activity.csv")
str(activity)
library(dplyr)
library(lubridate)
activity1 <- mutate(activity, date = ymd(date))
tot.steps <- activity1 %>%
group_by(date) %>%
summarize(steps = sum(steps, na.rm = T))
tot.steps1 <- tot.steps[complete.cases(tot.steps),]
steps <- as.Date(rep(tot.steps1$date, tot.steps1$steps))
hist(steps, "days", freq = T, main = "Total steps per day", xlab = "Date",
ylab = "Total step number", xlim = range(tot.steps$date))
median <- median(tot.steps$steps, na.rm = T)
mean <- mean(tot.steps$steps, na.rm = T)
int.av <- activity1 %>%
group_by(interval) %>%
summarize(av.steps = mean(steps, na.rm = T))
plot(int.av$interval, int.av$av.steps, type = "l",
col = "red", lwd = 3,
main = "Average steps per interval",
xlab = "Interval",
ylab = "Average steps")
max <- max(int.av$av.steps)
max.int <- int.av %>%
filter(av.steps == max) %>%
select(interval) %>%
as.integer(interval)
imputed <- activity1
for (i in 1:length(activity1$steps)) {
if (is.na(activity1[i, "steps"]) == TRUE) {
filt <- filter(activity1, interval == activity1[i,"interval"])
intmean <- mean(filt$steps, na.rm = TRUE)
imputed[i, "steps"] <- intmean
}
}
tot.imp <- imputed %>%
group_by(date) %>%
summarize(steps = sum(steps, na.rm = T))
# As there are no missing data now we can skip the selection of complete cases
imp.steps <- as.Date(rep(tot.imp$date, tot.imp$steps))
hist(imp.steps, "days", freq = T, main = "Total steps per day", xlab = "Date",
ylab = "Total step number")
imp.median <- median(tot.imp$steps)
imp.mean <- mean(tot.imp$steps)
library(chron)
activity2 <- mutate(imputed, weekend = is.weekend(imputed$date))
activity3 <- mutate(activity2, week = (if activity2$weekend == TRUE, "Weekend", else "Weekday"))
activity3 <- mutate(activity2, week = (if (activity2$weekend == TRUE) {"Weekend"} else {"Weekday"}))
View(activity3)
activity3 <- mutate(activity2, week = (if (activity2$weekend == TRUE) {"Weekend"} else if (activity2$weekend == FALSE) {"Weekday"}))
mydata$IsHoliday <- factor(ifelse(mydata$IsHoliday,"yes","no"))
activity2 <- mutate(imputed, week = factor(is.weekend(imputed$date), "Weekend", "Weekday"))
activity2 <- mutate(imputed, week = factor(ifelse(is.weekend(imputed$date), "Weekend", "Weekday")))
str(activity2)
int.week <- activity2 %>%
group_by(week, interval) %>%
summarize(av.steps = mean(steps, na.rm = T))
View(int.week)
int.week <- activity2 %>%
group_by(week, interval) %>%
summarize(av.steps = mean(steps, na.rm = T))
library(ggplot2)
g <- ggplot(int.week, aes(interval, av.steps)) +
geom_line() +
facet_grid(week~.)
g
g + labs( x = "Interval", y = "Average steps", color = "week")
g + labs( x = "Interval", y = "Average steps") + geom(color=week)
g <- ggplot(int.week, aes(interval, av.steps, color = week)) +
geom_line() +
facet_grid(week~.)
g + labs( x = "Interval", y = "Average steps")
g + labs( x = "Interval", y = "Average steps") + guides(fill=FALSE)
g + labs( x = "Interval", y = "Average steps")
g + labs( x = "Interval", y = "Average steps") + theme(legend.position='none')
int.week <- activity2 %>%
group_by(week, interval) %>%
summarize(av.steps = mean(steps, na.rm = T))
library(ggplot2)
g <- ggplot(int.week, aes(interval, av.steps, color = week)) +
geom_line() +
facet_grid(week~.)
g + labs( x = "Interval", y = "Average steps") +
theme(legend.position='none')
int.week <- activity2 %>%
group_by(week, interval) %>%
summarize(av.steps = mean(steps, na.rm = T))
library(ggplot2)
g <- ggplot(int.week, aes(interval, av.steps, color = week)) +
geom_line() +
facet_grid(week~.)
g + labs( x = "Interval", y = "Average steps") +
theme(legend.position='none')
g + labs( x = "Interval", y = "Average steps") +
+         theme(legend.position='none')
g + labs( x = "Interval", y = "Average steps") + theme(legend.position='none')
library(ggplot2)
g <- ggplot(int.week, aes(interval, av.steps, color = week)) +
geom_line() +
facet_grid(week~.)
g + labs( x = "Interval", y = "Average steps") + theme(legend.position='none')
g + labs( x = "Interval", y = "Average steps") + theme(legend.position='none')
g + labs( x = "Interval", y = "Number of steps") + theme(legend.position='none')
knit_with_parameters('~/Desktop/Coursera/RepData_PeerAssessment1/PA1_template.Rmd')
unlink('PA1_template_cache', recursive = TRUE)
library(knitr)
?knit2html
knit2html("PA1_template.Rmd")
knit2html("PA1_template.Rmd")
unlink('PA1_template_cache', recursive = TRUE)
knit2html("PA1_template.Rmd")
render("PA1_template.Rmd")
library(markdown)
render("PA1_template.Rmd")
?render
render("PA1_template.Rmd")
library(rmarkdown)
render("PA1_template.Rmd")
